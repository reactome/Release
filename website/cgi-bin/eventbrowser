#!/usr/local/bin/perl -w
use lib "/usr/local/gkb/modules";
use common::sense;
use CGI qw(:standard);
use CGI::Carp 'fatalsToBrowser';
use GKB::Config;
use Data::Dumper;
use GKB::StableIdentifierDatabase;
use GKB::FrontPage3;
use GKB::WebUtils;
use GKB::DBAdaptor;

my $CGI = CGI->new();
my $stable = GKB::StableIdentifierDatabase->new();

my $query_url  = '/content/query?q=';
my $instance_browser_url = '/cgi-bin/instancebrowser?ID=';
my $detail_url = '/content/detail/';

my $id = $CGI->param('ID') || $CGI->param('DB_ID');
my $st_id = $CGI->param('STID') || $CGI->param('ST_ID');
my $query = $CGI->param('QUERY') || $CGI->param('EXACT');
my $db = $CGI->param('DB') || $GK_DB_NAME;

my $DBA = GKB::DBAdaptor->new
    (
     -dbname => $db,
     -user   => $GK_DB_USER,
     -host   => $GK_DB_HOST,
     -pass   => $GK_DB_PASS,
     -port   => $GK_DB_PORT,
     -debug  => defined $CGI->param('DEBUG') ? $CGI->param('DEBUG') : undef
    );


unless ($id || $st_id || $query) {
    handle_error("eventbrowser: I do not have any search terms");
}

if ($st_id) {
   $id = $stable->db_id_from_stable_id($st_id)
       || handle_error("Unable to find a Reactome Instance for Stable ID $st_id");
}

my $url;

if ($id) {
    my $instance = $DBA->fetch_instance_by_db_id($id)->[0] || die "Could not get instance for $id";
    if ($instance->is_a('Event') || $instance->is_a('PhysicalEntity') || $instance->is_a('Regulation')){
	$url = "$detail_url$id";
    }
    else {
	$url = "$instance_browser_url$id;DB=$db";
    }
}
elsif ($query) {
    $url = "$query_url/'$query'";
}

if ($id && $CGI->param('PWB_REDIRECT')) {
    my $wu = GKB::WebUtils->new_from_cgi(-CGI => $CGI);
    my $instance = $wu->dba->fetch_instance_by_db_id($id)->[0];
    $url = $wu->build_pathway_browser_url($instance);
}

print $CGI->redirect($url);
#print header, $CGI->start_html;
#print $CGI->h1($url);
#print $CGI->end_html;



sub handle_error {
    my ($error_message) = @_;

    my $front_page = GKB::FrontPage3->new("eventbrowser", "/stylesheet.css");
    my $header = $front_page->get_header();
    my $footer = $front_page->get_footer();

    print header, $header;
    print qq(<h1 CLASS="frontpage"><FONT COLOR="RED">Internal error</FONT></h1>\n);
    print qq(<h1><PRE>\n\n\n$error_message\n\n</PRE></h1>\n);
    print $footer;

    exit;
}
